{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Footer.js","components/Testimonials.js","components/ContactUs.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","Resume","language_dict","adjusted_languages","Object","values","reduce","v","Math","min","language","adjusted","stringTotal","round","push","percent","total","sort","_ref","_ref2","education","ending","MonthEnded","YearEnded","achievements","Achievements","relevant","relevantCoursework","UniversityName","specialization","MonthOfPassing","YearOfPassing","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","_ref3","concat","width","Porfolio","fontSize","textDecoration","portfolio","Footer","imagebaseurl","role","linkedinId","website","secondSpecialization","HTML","Dart","Java","JavaScript","CSS","Python","Go","C++","skills","skillname","description","imgurl","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce46401f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               {/* <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li> */}\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">{resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h1 style={{color: 'white'}}>About Me</h1>\n               <h6 style={{color: 'white'}}>\n               {\n                 resumeData.aboutme\n               }\n               </h6>\n\n               {/* <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div> */}\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    let {language_dict} = resumeData;\n    let total = Object.values(language_dict).reduce((a, v) => a + v, 0);\n    let min = Math.min(Object.values(language_dict));\n    // total = total - min;\n    let adjusted_languages = []\n    for (let language in language_dict) {\n      let adjusted = language_dict[language] / 600000;\n      if (language === \"Java\") {\n        adjusted = language_dict[language] / 10000000;\n      }\n      let stringTotal = Math.round(language_dict[language] / 1000) + 'k';\n      adjusted_languages.push({language, \n        percent:adjusted, \n        total: stringTotal});\n    }\n    adjusted_languages = adjusted_languages.sort((({percent: a}, {percent:b}) => b - a));\n    return (\n      <section id=\"resume\">\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  let ending = (<span />);\n                  if (item.MonthEnded) {\n                    ending = <span>- {item.MonthEnded} {item.YearEnded} </span>\n                  }\n                  let achievements = (<span />);\n                  if (item.Achievements) {\n                    achievements = (<div><h6>Achievements</h6>\n                      <p>\n                      {item.Achievements}\n                      </p></div>)\n                  }\n                  let relevant = (<span />);\n                  if (item.relevantCoursework) {\n                    relevant = (<div><h6>Relevant Coursework</h6>\n                      <p>\n                      {item.relevantCoursework}\n                      </p></div>)\n                  }\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing} {ending}</em></p>\n                          {relevant}\n                          {achievements}\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  let ending = (<span />);\n                  if (item.MonthEnded) {\n                    ending = <span>- {item.MonthEnded} {item.YearEnded} </span>\n                  }\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving} {ending}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h3>\n               {resumeData.skillsDescription}\n               </h3>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {/* {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`} style={{width:item.skillname.length * 10 + '%'}}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                } */}\n\n              {\n                  adjusted_languages.map(({language, percent, total}) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${language}`} style={{width: percent * 100 + '%'}}>\n                      </span><em>{language} {total} lines</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1 style={{fontSize: '3rem'}}>Here's My&nbsp;\n          <span><a target=\"_blank\" href=\"static/Alexander_Gurung_resume_May2020.pdf\" style={{textDecoration:'none'}}>Resume!</a></span>\n          </h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div />\n                // <div>\n                //   <div style={{display: 'flex', flexDirection: 'row', marginBottom: 20}}> \n                //     <img alt={item.name} src={`${item.imgurl}`} className=\"item-img\" style={{width:'25%'}}/>\n                //     <h1 style={{fontSize: '2.5rem', textAlign: 'center', paddingLeft: '25%'}}>{item.name}</h1>\n                //   </div>\n                // </div>\n                // <div className=\"columns portfolio-item\">\n                //   <div className=\"item-wrap\">\n                //     <a href=\"#modal-01\">\n                //       <img alt={item.name} src={`${item.imgurl}`} className=\"item-img\"/>\n                //       <div className=\"overlay\">\n                //         <div className=\"portfolio-item-meta\">\n                //           <h5>{item.name}</h5>\n                //           <p>{item.description}</p>\n                //         </div>\n                //       </div>\n                //     </a>\n                //   </div>\n                // </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          <li>\n            <a href=\"terrible.html\">Terrible</a>\n            {/* <i className={item.className} /> */}\n            {/* </a> */}\n          </li>\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","let resumeData = {\n    \"imagebaseurl\":\"https://alex-gurung.github.io/\",\n    \"name\": \"Alex Gurung\",\n    \"role\": \"Backend Developer/Data Scientist\",\n    \"linkedinId\":\"alexandergurung\",\n    \"roleDescription\": \"Hi! I'm a backend developer (although I have full-stack experience) and Machine Learning Researcher who's hoping to pursue a career in Machine Learning and Data Science! I'm currently looking for both summer internships and full-time opportunities!\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/alexandergurung\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"http://github.com/alex-gurung\",\n          \"className\":\"fa fa-github\"\n        },\n\n      ],\n    \"aboutme\":\"I'm a Computer Science major at Georgia Tech set to graduate Fall 2020 with a Bachelor's of Science in CS and a Minor in Linguistics. I've begun my Master's at Georgia Tech through the BSMS program and am hoping to graduate in Spring 2022. In the meantime I'm looking for summer internship or co-op opportunities!\",\n    \"website\":\"https://alex-gurung.github.io\",\n    \"education\":[\n      {\n        \"UniversityName\":\"Georgia Institute of Technology\",\n        \"specialization\":\"MS in Computer Science\",\n        \"secondSpecialization\":\"\",\n        \"MonthOfPassing\":\"Aug\",\n        \"YearOfPassing\":\"2020\",\n        \"MonthEnded\":\"Apr\",\n        \"YearEnded\":\"2022 (predicted)\",\n        \"Achievements\":\"\",\n        \"relevantCoursework\": \"\"\n      },\n      {\n        \"UniversityName\":\"Georgia Institute of Technology\",\n        \"specialization\":\"BS in Computer Science - Linguistics Minor\",\n        \"secondSpecialization\":\"\",\n        \"MonthOfPassing\":\"Aug\",\n        \"YearOfPassing\":\"2018\",\n        \"MonthEnded\":\"Dec\",\n        \"YearEnded\":\"2020 (predicted)\",\n        \"Achievements\":\"Member of Honors Program, Undergraduate Researcher in Computational Social Science\",\n        \"relevantCoursework\": \"Data Structures & Algorithms, Discrete Mathematics, Object Oriented Programming, AGILE Development, Machine Learning, Computational Linguistics, Probability & Statistics\"\n      },\n      {\n        \"UniversityName\":\"Thomas Jefferson High School for Science and Technology\",\n        \"MonthOfPassing\":\"Sept\",\n        \"YearOfPassing\":\"2014\",\n        \"MonthEnded\":\"Aug\",\n        \"YearEnded\":\"2018\",\n        \"Achievements\":\"President of Linguistics Club and Development Club, Member of Mobile & Web Development Research Lab\",\n        \"relevantCoursework\": \"Artificial Intelligence, Mobile & Web App Development\"\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"The Home Depot (Summer)\",\n        \"specialization\":\"Software Engineer Intern\",\n        \"MonthOfLeaving\":\"Jun\",\n        \"YearOfLeaving\":\"2020\",\n        \"MonthEnded\": \"August\",\n        \"Achievements\":\"I'm a full-stack developer for the Emergency Visualization team currently working on improving the current system for tracking key shipments in times of crisis using Machine Learning and data science techniques.\"\n      },\n      {\n        \"CompanyName\":\"VitalEyes\",\n        \"specialization\":\"Cofounder\",\n        \"MonthOfLeaving\":\"Jun\",\n        \"YearOfLeaving\":\"2020\",\n        \"MonthEnded\": \"present\",\n        \"Achievements\":\"I'm a cofounder of a startup aimed at improving cleanliness and increasing the availability of health data in public spaces. We are currently going through Create-X's summer launch program and are in the process of bringing our product to market.\"\n      },\n      {\n        \"CompanyName\":\"The Home Depot\",\n        \"specialization\":\"Software Engineer Intern\",\n        \"MonthOfLeaving\":\"Feb\",\n        \"YearOfLeaving\":\"2020\",\n        \"MonthEnded\": \"May\",\n        \"YearEnded\": \"2020\",\n        \"Achievements\":\"I worked on a 3 person team and created a proof-of-concept recommender system using a combination of NLP and Object-Detection techniques. To that end we trained a DistilBert classifier and Inception V3 model and showed that their results outperformed the current system.\"\n      },\n      {\n        \"CompanyName\":\"Computational Social Science Lab\",\n        \"specialization\":\"Undergraduate Researcher\",\n        \"MonthOfLeaving\":\"Oct\",\n        \"YearOfLeaving\":\"2019\",\n        \"MonthEnded\": \"present\",\n        \"Achievements\":\"I'm currently working on a research team analysing twitter-based complaints concerning transportation. We perform topic modeling and train classifiers on twitter data to help inform transportation and infrastructure policy.\"\n      },\n      {\n        \"CompanyName\":\"Monotto\",\n        \"specialization\":\"Backend/Data Science Developer\",\n        \"MonthOfLeaving\":\"Jun\",\n        \"YearOfLeaving\":\"2019\",\n        \"MonthEnded\": \"present\",\n        \"Achievements\":\"I work as a developer for Monotto, a fintech company based in Atlanta. I helped launch our flagship product, implementing backend algorithms and models. I'm currently leading the development of our new product, for which I'm using simple Data Science techniques to analyse financial transaction data.\"\n      },\n      {\n        \"CompanyName\":\"Automated Algorithm Design Research Lab\",\n        \"specialization\":\"Undergraduate Researcher\",\n        \"MonthOfLeaving\":\"Jan\",\n        \"YearOfLeaving\":\"2019\",\n        \"MonthEnded\": \"present\",\n        \"Achievements\":\"For the past year I've been working for a research lab on campus associated with the Georgia Tech Research Institute (GTRI). I personally have worked on improving the efficiency of cache invalidation and implementing Natural Language Processing techniques within the Lab's framework.\"\n      }\n    ],\n    \"language_dict\": {\n      'HTML': 16182,\n      'Dart': 30064,\n      'Java': 9645644,\n      'JavaScript': 346655,\n      'CSS': 4410,\n      'Python': 450486,\n      'Go': 27385,\n      'C++': 1339,\n    },\n    \"skillsDescription\":\"Skills (by lines of code in Github)\",\n    \"skills\":[\n      {\n        \"skillname\":\"HTML5\"\n      },\n      {\n        \"skillname\":\"CSS\"\n      },\n      {\n        \"skillname\":\"Reactjs\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"Arbitrary Style Transfer\",\n        \"description\":\"Mobile App to Perform Neural Style Transfer\",\n        \"imgurl\":\"images/pastiche.jpg\"\n      },\n      {\n        \"name\":\"Lighthouse\",\n        \"description\":\"Hackathon project to provide rapid housing to those in crisis\",\n        \"imgurl\":\"images/lighthouse.png\"\n      },\n      {\n        \"name\":\"project3\",\n        \"description\":\"mobileapp\",  \n        \"imgurl\":\"images/portfolio/project2.png\"\n      },\n      {\n        \"name\":\"project4\",\n        \"description\":\"mobileapp\",\n        \"imgurl\":\"images/portfolio/phone.jpg\"\n      }\n    ],\n  }\n  \n  export default resumeData;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}